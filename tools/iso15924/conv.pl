#!/usr/bin/perl

$inp_filename = "iso15924-codes.html";
$out1_filename = "../../locale_data/iso-15924_data.c";
$out2_filename = "../../locale_data/iso-15924_data.h";

if (!open(INF, "< $inp_filename")) {
	die "Unable to open $inp_filename";
}
if (!open(OUTF1, "> $out1_filename")) {
	close(INF);
	die "Unable to open $out1_filename";
}
if (!open(OUTF2, "> $out2_filename")) {
	close(OUTF1);
	close(INF);
	die "Unable to open $out2_filename";
}
@lines = <INF>;
close(INF);

print OUTF1 <<EOF;
// clang-format off

// ISO 15924 Codes for the representation of names of scripts.
// License: Public Domain.
// This file is autogenerated.
// Based on data from: https://unicode.org/iso15924/
// file: iso15924-codes.html
// url: https://unicode.org/iso15924/iso15924-codes.html

#include "iso-15924_data.h"

#include <stddef.h>

const struct iso15924_rec iso15924_data[] = {
EOF

$count = 0;
$/="\n";
foreach $line (@lines) {
	chomp($line);
	my ($code, $num, $name_eng, $name_fr, $alias, $age, $date);
	if ($line =~ m/^<tr><td>(\w{4})<\/td><td>(\d+)<\/td><td>(.+)<\/td><td>(.+)<\/td><td>(.*)<\/td><td>(.*)<\/td><td nowrap>(.*)<\/td><\/tr>$/) {
		$code = $1;
		$num = $2;
		$name_eng = $3;
		$name_fr = $4;
		$alias = $5;
		$age = $6;
		$date = $7;
		if ($alias =~ m/^&nbsp;$/) {
			$alias = "";
		}
		if ($num =~ m/^0+(\d+)$/) {
			$num = $1;
		}
		my $alias_c = length($alias) > 0 ? "\"$alias\"" : "NULL";
		print OUTF1 "\t{\"$code\", \"$name_eng\", $alias_c, $num},\n";
		$count++;
	}
}

print OUTF1 "};\n\n";
print OUTF1 "// clang-format on\n";
close(OUTF1);

print OUTF2 <<EOF;
// clang-format off

// ISO 15924 Codes for the representation of names of scripts.
// License: Public Domain.
// This file is autogenerated.
// Based on data from: https://unicode.org/iso15924/
// file: iso15924-codes.html
// url: https://unicode.org/iso15924/iso15924-codes.html

#ifndef ISO15924_DATA_H
#define ISO15924_DATA_H

#ifdef __cplusplus
extern "C" {
#endif

#define ISO15924_DATA_SZ	${count}

struct iso15924_rec {
	/**
	 * Code.
	 */
	const char* code;
	/**
	 * English name.
	 */
	const char* name;
	/**
	 * Alias.
	 */
	const char* alias;
	/**
	 * Numeric value.
	 */
	unsigned int num;
};

extern const struct iso15924_rec iso15924_data[];

#ifdef __cplusplus
}
#endif

#endif // ISO15924_DATA_H

// clang-format on
EOF
close(OUTF2);
